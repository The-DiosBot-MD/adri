{
    "_comment": "NO EDITAR: ARCHIVO GENERADO AUTOMÁTICAMENTE POR PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2024-09-07T00:49:27-03:00",
    "name": "Nodejs",
    "author": "katashifukushima23@gmail.com",
    "description": "un egg genérico para node.js\r\n\r\nEsto clonará un repositorio git. Por defecto, usa master si no se especifica una rama.\r\n\r\nInstala los node_modules al instalar. Si estableces user_upload, asumo que sabes lo que estás haciendo.",
    "features": null,
    "docker_images": {
        "ghcr.io\/parkervcp\/yolks:nodejs_20": "ghcr.io\/parkervcp\/yolks:nodejs_20"
    },
    "file_denylist": [],
    "startup": "if [[ -d .git ]] && [[ 1 == \"1\" ]]; then git pull; fi; if [[ ! -z ${NODE_PACKAGES} ]]; then \/usr\/local\/bin\/npm install ${NODE_PACKAGES}; fi; if [[ ! -z ${UNNODE_PACKAGES} ]]; then \/usr\/local\/bin\/npm uninstall ${UNNODE_PACKAGES}; fi; if [ -f \/home\/container\/package.json ]; then \/usr\/local\/bin\/npm install; fi; \/usr\/local\/bin\/node \/home\/container\/${MAIN_FILE}",
    "config": {
        "files": "{}",
        "startup": "{\r\n    \"done\": [\r\n        \"cambia este texto 1\",\r\n        \"cambia este texto 2\"\r\n    ]\r\n}",
        "logs": "{}",
        "stop": "^^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# Script de instalación de aplicación NodeJS\r\n#\r\n# Archivos del servidor: \/mnt\/server\r\napt update\r\napt install -y git curl jq file unzip make gcc g++ python python-dev libtool\r\n\r\necho -e \"actualizando npm. por favor espera...\"\r\nnpm install npm@latest -g\r\n\r\nmkdir -p \/mnt\/server\r\ncd \/mnt\/server\r\n\r\nif [ \"${USER_UPLOAD}\" == \"true\" ] || [ \"${USER_UPLOAD}\" == \"1\" ]; then\r\n    echo -e \"asumiendo que el usuario sabe lo que está haciendo, que tengas un buen día.\"\r\n    exit 0\r\nfi\r\n\r\n## agregar terminación git si no está en la dirección\r\nif [[ ${GIT_ADDRESS} != *.git ]]; then\r\n    GIT_ADDRESS=${GIT_ADDRESS}.git\r\nfi\r\n\r\nif [ -z \"${USERNAME}\" ] && [ -z \"${ACCESS_TOKEN}\" ]; then\r\n    echo -e \"usando llamada API anónima\"\r\nelse\r\n    GIT_ADDRESS=\"https:\/\/${USERNAME}:${ACCESS_TOKEN}@$(echo -e ${GIT_ADDRESS} | cut -d\/ -f3-)\"\r\nfi\r\n\r\n## clonar el repositorio js git\r\nif [ \"$(ls -A \/mnt\/server)\" ]; then\r\n    echo -e \"el directorio \/mnt\/server no está vacío.\"\r\n    if [ -d .git ]; then\r\n        echo -e \"el directorio .git existe\"\r\n        if [ -f .git\/config ]; then\r\n            echo -e \"cargando información desde la configuración de git\"\r\n            ORIGIN=$(git config --get remote.origin.url)\r\n        else\r\n            echo -e \"archivos encontrados sin configuración git\"\r\n            echo -e \"saliendo sin tocar nada para no romper nada\"\r\n            exit 10\r\n        fi\r\n    fi\r\n\r\n    if [ \"${ORIGIN}\" == \"${GIT_ADDRESS}\" ]; then\r\n        echo \"extrayendo lo último de github\"\r\n        git pull\r\n    fi\r\nelse\r\n    echo -e \"\/mnt\/server está vacío.\\nclonando archivos en el repositorio\"\r\n    if [ -z ${BRANCH} ]; then\r\n        echo -e \"clonando la rama predeterminada\"\r\n        git clone ${GIT_ADDRESS} .\r\n    else\r\n        echo -e \"clonando ${BRANCH}'\"\r\n        git clone --single-branch --branch ${BRANCH} ${GIT_ADDRESS} .\r\n    fi\r\n\r\nfi\r\n\r\necho \"Instalando paquetes nodejs\"\r\nif [[ ! -z ${NODE_PACKAGES} ]]; then\r\n    \/usr\/local\/bin\/npm install ${NODE_PACKAGES}\r\nfi\r\n\r\nif [ -f \/mnt\/server\/package.json ]; then\r\n    \/usr\/local\/bin\/npm install --production\r\nfi\r\n\r\necho -e \"instalación completa\"\r\nexit 0",
            "container": "node:18-bullseye-slim",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Dirección del Repositorio Git",
            "description": "Repositorio de GitHub para clonar\r\n\r\nEj: https:\/\/github.com\/parkervcp\/repo_name",
            "env_variable": "GIT_ADDRESS",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Rama de Instalación",
            "description": "La rama para instalar.",
            "env_variable": "BRANCH",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Actualización Automática",
            "description": "Extraer los últimos archivos al iniciar cuando se usa un repositorio GitHub.",
            "env_variable": "AUTO_UPDATE",
            "default_value": "1",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|boolean",
            "field_type": "text"
        },
        {
            "name": "Archivo Principal",
            "description": "El archivo que inicia la aplicación.\r\nPuede ser .js o .ts",
            "env_variable": "MAIN_FILE",
            "default_value": "index.js",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:16",
            "field_type": "text"
        },
        {
            "name": "Nombre de Usuario Git",
            "description": "Nombre de usuario para autenticar con git.",
            "env_variable": "USERNAME",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Token de Acceso Git",
            "description": "Contraseña para usar con git.\r\n\r\nEs recomendable usar un Token de Acceso Personal.\r\nhttps:\/\/github.com\/settings\/tokens\r\nhttps:\/\/gitlab.com\/-\/profile\/personal_access_tokens",
            "env_variable": "ACCESS_TOKEN",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Argumentos Adicionales",
            "description": "Cualquier argumento extra para nodejs o ts-node",
            "env_variable": "NODE_ARGS",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|max:64",
            "field_type": "text"
        },
        {
            "name": "Paquetes Node adicionales",
            "description": "Instalar paquetes adicionales de node.\r\n\r\nUsa espacios para separar.",
            "env_variable": "NODE_PACKAGES",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Desinstalar paquetes Node",
            "description": "Desinstalar paquetes node.\r\n\r\nUsa espacios para separar.",
            "env_variable": "UNNODE_PACKAGES",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Archivos Subidos por el Usuario",
            "description": "Omitir todo el proceso de instalación si dejas que un usuario suba archivos.\r\n\r\n0 = falso (por defecto)\r\n1 = verdadero",
            "env_variable": "USER_UPLOAD",
            "default_value": "0",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|boolean",
            "field_type": "text"
        }
    ]
}
